<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="member">

	<typeAlias  alias="memberVO" type="egovframework.plani.custom.memsvc.vo.MemberVO"/>
	
	
	<insert id="memberDAO.insertMember" parameterClass="memberVO">

		INSERT INTO CMS_USR_INFO
		(
			USER_ID,
			USER_SCRT,
			USER_NM,
			USER_EMAIL,
			USER_BIRTH,
			USER_CP_1,
			USER_CP_2,
			USER_CP_3,
			USER_TEL_1,
			USER_TEL_2,
			USER_TEL_3,
			USER_ZIP,
			USER_ADDR_1,
			USER_ADDR_2,
			USER_DEPT,
			USER_GRADE,
			USER_AUTH_CD,
			USER_DUP_INFO,
			USER_NAME_CHK,
			MAILING_YN,
			ALLOW_IP,
			WRITER,
			WDT
		)
		VALUES
		(
			#user_id#,
			#user_scrt#,
			#user_nm#,
			#user_email#,
			#user_birth#,
			#user_cp_1#,
			#user_cp_2#,
			#user_cp_3#,
			#user_tel_1#,
			#user_tel_2#,
			#user_tel_3#,
			#user_zip#,
			#user_addr_1#,
			#user_addr_2#,
			#user_dept#,
			#user_grade#,
			#user_auth_cd#,
			#user_dupinfo#,
			#user_name_chk#,
			#mailing_yn#,
			#allow_ip#,
			#writer#,
			SYSDATE
		)

	</insert>
	
	<update id="memberDAO.updateMember" parameterClass="memberVO">

		UPDATE CMS_USR_INFO SET
			<isNotEmpty property="user_scrt">
				USER_SCRT = #user_scrt#,
			</isNotEmpty>
			<isNotEmpty property="user_nm">
				USER_NM = #user_nm#,
			</isNotEmpty>
			<isNotEmpty property="user_email">
				USER_EMAIL = #user_email#,
			</isNotEmpty>
			USER_BIRTH = #user_birth#,
			USER_CP_1 = #user_cp_1#,
			USER_CP_2 = #user_cp_2#,
			USER_CP_3 = #user_cp_3#,
			USER_TEL_1 = #user_tel_1#,
			USER_TEL_2 = #user_tel_2#,
			USER_TEL_3 = #user_tel_3#,
			<isNotEmpty property="user_zip">
				USER_ZIP = #user_zip#,
				USER_ADDR_1 = #user_addr_1#,
				USER_ADDR_2 = #user_addr_2#,
			</isNotEmpty>
			<isNotEmpty property="user_dept">
				USER_DEPT = #user_dept#,
			</isNotEmpty>
			<isNotEmpty property="user_grade">
				USER_GRADE = #user_grade#,
			</isNotEmpty>
			<isNotEmpty property="user_auth_cd">
				USER_AUTH_CD = #user_auth_cd#,
			</isNotEmpty>
			<isNotEmpty property="mailing_yn">
				MAILING_YN = #mailing_yn#,
			</isNotEmpty>
			<isNotEmpty property="allow_ip">
				ALLOW_IP = #allow_ip#,
			</isNotEmpty>
			MODIFIER = #modifier#,
			MDT = SYSDATE
		WHERE
			USER_ID = #user_id#

	</update>
	
	<update id="memberDAO.updateMemberAuth" parameterClass="memberVO">

		UPDATE CMS_USR_INFO SET
			USER_AUTH_CD = #user_auth_cd#
		WHERE
			USER_ID = #user_id#

	</update>
	
	<update id="memberDAO.updateMemberLastlogin" parameterClass="memberVO">

		UPDATE CMS_USR_INFO SET
			LAST_LOGIN = SYSDATE
		WHERE
			USER_ID = #user_id#

	</update>

	<update id="memberDAO.updateMemberValid" parameterClass="memberVO">

		UPDATE CMS_USR_INFO SET
			USER_AUTH_CD = 'U0003'
		WHERE
			SF_AUTH_LV(USER_AUTH_CD) <![CDATA[ >= 9998 ]]>  

	</update>

	<update id="memberDAO.updateMemberUnvalid" parameterClass="memberVO">

		UPDATE CMS_USR_INFO SET
			USER_AUTH_CD = 'U0001'
		WHERE
			SF_AUTH_LV(USER_AUTH_CD) <![CDATA[ > 1002 ]]>  

	</update>
	
	<update id="memberDAO.updateMemberDupinfo" parameterClass="memberVO">

		UPDATE CMS_USR_INFO SET
			USER_DUP_INFO = #user_dup_info#
		WHERE
			USER_ID = #user_id#

	</update>
	
	<delete id="memberDAO.deleteMember" parameterClass="memberVO">
		DELETE FROM CMS_USR_INFO
		WHERE
			USER_ID = #user_id#
		<!-- 
		UPDATE CMS_USR_INFO SET
		 	VALID_YN = 'N',
		 	USER_CP_1 = '',
			USER_CP_2 = '',
			USER_CP_3 = '',
		 	MODIFIER = #modifier#,
			MDT = SYSDATE
		WHERE
			USER_ID = #user_id#
		-->	
		 
	</delete>
	
	<select id="memberDAO.selectMember" parameterClass="memberVO" resultClass="memberVO">

		SELECT
			USER_ID,
			USER_NM,
			USER_EMAIL,
			USER_BIRTH,
			USER_CP_1,
			USER_CP_2,
			USER_CP_3,
			USER_TEL_1,
			USER_TEL_2,
			USER_TEL_3,
			USER_ZIP,
			USER_ADDR_1,
			USER_ADDR_2,
			USER_DEPT,
			USER_GRADE,
			USER_AUTH_CD,
			SF_AUTH_NM(USER_AUTH_CD) USER_AUTH_NM,
			MAILING_YN,
			ALLOW_IP,
			WRITER,
			TO_CHAR(WDT, 'YYYY-MM-DD') WDT,
			MODIFIER,
			TO_CHAR(MDT, 'YYYY-MM-DD') MDT
		FROM
			CMS_USR_INFO
		WHERE
			USER_ID = #user_id# AND
			VALID_YN = 'Y'

	</select>
	
	<select id="memberDAO.selectMemberByDupInfo" parameterClass="memberVO" resultClass="memberVO">

		SELECT
			USER_ID,
			USER_NM,
			USER_EMAIL,
			USER_BIRTH,
			USER_CP_1,
			USER_CP_2,
			USER_CP_3,
			USER_TEL_1,
			USER_TEL_2,
			USER_TEL_3,
			USER_ZIP,
			USER_ADDR_1,
			USER_ADDR_2,
			USER_DEPT,
			USER_GRADE,
			USER_AUTH_CD,
			SF_AUTH_NM(USER_AUTH_CD) USER_AUTH_NM,
			MAILING_YN,
			ALLOW_IP,
			WRITER,
			TO_CHAR(WDT, 'YYYY-MM-DD') WDT,
			MODIFIER,
			TO_CHAR(MDT, 'YYYY-MM-DD') MDT
		FROM
			CMS_USR_INFO
		WHERE
			USER_DUP_INFO = #user_dupinfo# AND
			VALID_YN = 'Y'

	</select>
	
	<select id="memberDAO.recoverMember" parameterClass="memberVO" resultClass="memberVO">

		SELECT
			USER_ID,
			USER_EMAIL,
			USER_SCRT
		FROM
			CMS_USR_INFO
		WHERE
			1 = 1
			<isNotEmpty property="user_nm" prepend="AND">
				USER_NM = #user_nm#
			</isNotEmpty>
			<isNotEmpty property="user_id" prepend="AND">
				USER_ID = #user_id#
			</isNotEmpty>
			<isNotEmpty property="user_email" prepend="AND">
				USER_EMAIL = #user_email#
			</isNotEmpty>
			<isNotEmpty property="user_cp_1" prepend="AND">
				USER_CP_1 = #user_cp_1# AND
				USER_CP_2 = #user_cp_2# AND
				USER_CP_3 = #user_cp_3#
			</isNotEmpty>
			<isNotEmpty property="user_birth" prepend="AND">
				USER_BIRTH = #user_birth#
			</isNotEmpty>

	</select>
	
	<select id="memberDAO.checkDuplication" parameterClass="memberVO" resultClass="int">

		SELECT
			COUNT(*)
		FROM
			CMS_USR_INFO
		WHERE
			1 = 1
			<isNotEmpty property="user_id" prepend="AND">
				USER_ID = #user_id#
			</isNotEmpty>
			<isNotEmpty property="user_email" prepend="AND">
				USER_EMAIL = #user_email#
			</isNotEmpty>
			<isNotEmpty property="user_cp_1" prepend="AND">
				USER_CP_1 = #user_cp_1# AND
				USER_CP_2 = #user_cp_2# AND
				USER_CP_3 = #user_cp_3#
			</isNotEmpty>

	</select>
	
	<select id="memberDAO.checkMember" parameterClass="memberVO" resultClass="memberVO">

		SELECT
			USER_ID,
			USER_NM,
			USER_EMAIL,
			USER_BIRTH,
			USER_CP_1,
			USER_CP_2,
			USER_CP_3,
			USER_ZIP,
			USER_ADDR_1,
			USER_ADDR_2,
			USER_DEPT,
			USER_GRADE,
			USER_AUTH_CD,
			SF_AUTH_NM(USER_AUTH_CD) USER_AUTH_NM,
			B.AUTH_LV USER_AUTH_LV,
			MAILING_YN,
			ALLOW_IP,
			A.WRITER,
			TO_CHAR(A.WDT, 'YYYY-MM-DD') WDT,
			A.MODIFIER,
			TO_CHAR(A.MDT, 'YYYY-MM-DD') MDT
		FROM
			CMS_USR_INFO A,
			CMS_SYS_AUTH B
		WHERE
			A.USER_AUTH_CD = B.AUTH_CD AND
			USER_ID = #user_id# AND
			USER_SCRT = #user_scrt# AND
			VALID_YN = 'Y'

	</select>
	
	<select id="memberDAO.selectMemberList" parameterClass="memberVO" resultClass="memberVO">

		SELECT * FROM ( SELECT rownum rn, TB.* FROM (
			
			SELECT
				* 
			FROM
			(
				SELECT
					USER_ID,
					USER_NM,
					USER_EMAIL,
					USER_BIRTH,
					USER_CP_1,
					USER_CP_2,
					USER_CP_3,
					USER_TEL_1,
					USER_TEL_2,
					USER_TEL_3,
					USER_ZIP,
					USER_ADDR_1,
					USER_ADDR_2,
					USER_DEPT,
					USER_GRADE,
					USER_AUTH_CD,
					USER_AUTH_LV,
					USER_AUTH_NM,
					MAILING_YN,
					VALID_YN,
					ALLOW_IP,
					WRITER,
					WDT,
					MODIFIER,
					MDT
				FROM
					(
						SELECT
							USER_ID,
							USER_NM,
							USER_EMAIL,
							USER_BIRTH,
							USER_CP_1,
							USER_CP_2,
							USER_CP_3,
							USER_TEL_1,
							USER_TEL_2,
							USER_TEL_3,
							USER_ZIP,
							USER_ADDR_1,
							USER_ADDR_2,
							USER_DEPT,
							USER_GRADE,
							USER_AUTH_CD,
							TO_NUMBER(SF_AUTH_LV(USER_AUTH_CD)) USER_AUTH_LV,
							SF_AUTH_NM(USER_AUTH_CD) USER_AUTH_NM,
							MAILING_YN,
							VALID_YN,
							ALLOW_IP,
							WRITER,
							TO_CHAR(WDT, 'YYYY-MM-DD HH24:MI:SS') WDT,
							MODIFIER,
							TO_CHAR(MDT, 'YYYY-MM-DD') MDT
						FROM
							CMS_USR_INFO	
						ORDER BY USER_AUTH_LV ASC, WDT ASC, USER_NM ASC		
					)
				WHERE
					VALID_YN = 'Y' AND
					SUBSTR(USER_AUTH_CD, 1, 1) NOT IN ('D')
					<isNotEmpty property="user_id" prepend="AND">
						USER_ID = #user_id#
					</isNotEmpty>					
					<isEqual property="user_auth_lv" prepend="AND" compareValue="100">
						USER_AUTH_LV <![CDATA[ < ]]> #user_auth_lv#
					</isEqual>
					<isEqual property="user_auth_lv" prepend="AND" compareValue="10000">
						USER_AUTH_LV BETWEEN 101 AND 10000 
					</isEqual>
					<isEqual property="mailing_yn" prepend="AND" compareValue="Y">
						mailing_yn = 'Y'
					</isEqual>
					<isNotEmpty property="searchKeyword" prepend="AND">
						( USER_ID LIKE '%' || #searchKeyword# || '%' OR 
						USER_NM LIKE '%' || #searchKeyword# || '%' OR 
						USER_EMAIL LIKE '%' || #searchKeyword# || '%' OR 
						USER_CP_3 LIKE '%' || #searchKeyword# || '%' )
					</isNotEmpty>
			)
			
		) TB )  WHERE rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
		
		
	</select>
	
	<select id="memberDAO.selectMemberListTotCnt" parameterClass="memberVO" resultClass="int">

		SELECT
			COUNT(*) AS TOTCNT
		FROM
		(
			SELECT
				USER_ID,
				USER_NM,
				USER_EMAIL,
				USER_BIRTH,
				USER_CP_1,
				USER_CP_2,
				USER_CP_3,
				USER_ZIP,
				USER_ADDR_1,
				USER_ADDR_2,
				USER_DEPT,
				USER_GRADE,
				USER_AUTH_CD,
				SF_AUTH_LV(USER_AUTH_CD) USER_AUTH_LV,
				SF_AUTH_NM(USER_AUTH_CD) USER_AUTH_NM,
				MAILING_YN,
				VALID_YN,
				ALLOW_IP,
				WRITER,
				TO_CHAR(WDT, 'YYYY-MM-DD') WDT,
				MODIFIER,
				TO_CHAR(MDT, 'YYYY-MM-DD') MDT
			FROM
				CMS_USR_INFO
		)
		WHERE
			VALID_YN = 'Y' AND
			SUBSTR(USER_AUTH_CD, 1, 1) NOT IN ('D')
			<isNotEmpty property="user_id" prepend="AND">
				USER_ID = #user_id#
			</isNotEmpty>			
			<isEqual property="user_auth_lv" prepend="AND" compareValue="100">
				USER_AUTH_LV <![CDATA[ < ]]> #user_auth_lv#
			</isEqual>
			<isEqual property="user_auth_lv" prepend="AND" compareValue="10000">
				USER_AUTH_LV <![CDATA[ > ]]> 100 AND USER_AUTH_LV <![CDATA[ < ]]> #user_auth_lv# 
			</isEqual>
			<isEqual property="mailing_yn" prepend="AND" compareValue="Y">
				mailing_yn = 'Y'
			</isEqual>
			<isNotEmpty property="searchKeyword" prepend="AND">
				( USER_ID LIKE '%' || #searchKeyword# || '%' OR 
				USER_NM LIKE '%' || #searchKeyword# || '%' OR 
				USER_EMAIL LIKE '%' || #searchKeyword# || '%' OR 
				USER_CP_3 LIKE '%' || #searchKeyword# || '%' )
			</isNotEmpty>
	</select>
	
	<select id="memberDAO.xlsMemberList" parameterClass="memberVO" resultClass="memberVO">


		SELECT * FROM ( SELECT rownum rn, TB.* FROM (
			
			SELECT
				* 
			FROM
			(
				SELECT
					USER_ID,
					USER_NM,
					USER_EMAIL,
					USER_BIRTH,
					USER_CP_1,
					USER_CP_2,
					USER_CP_3,
					USER_TEL_1,
					USER_TEL_2,
					USER_TEL_3,
					USER_ZIP,
					USER_ADDR_1,
					USER_ADDR_2,
					USER_DEPT,
					USER_GRADE,
					USER_AUTH_CD,
					USER_AUTH_LV,
					USER_AUTH_NM,
					MAILING_YN,
					VALID_YN,
					ALLOW_IP,
					WRITER,
					WDT,
					MODIFIER,
					MDT
				FROM
					(
						SELECT
							USER_ID,
							USER_NM,
							USER_EMAIL,
							USER_BIRTH,
							USER_CP_1,
							USER_CP_2,
							USER_CP_3,
							USER_TEL_1,
							USER_TEL_2,
							USER_TEL_3,
							USER_ZIP,
							USER_ADDR_1,
							USER_ADDR_2,
							USER_DEPT,
							USER_GRADE,
							USER_AUTH_CD,
							TO_NUMBER(SF_AUTH_LV(USER_AUTH_CD)) USER_AUTH_LV,
							SF_AUTH_NM(USER_AUTH_CD) USER_AUTH_NM,
							MAILING_YN,
							VALID_YN,
							ALLOW_IP,
							WRITER,
							TO_CHAR(WDT, 'YYYY-MM-DD HH24:MI:SS') WDT,
							MODIFIER,
							TO_CHAR(MDT, 'YYYY-MM-DD') MDT
						FROM
							CMS_USR_INFO
						ORDER BY USER_AUTH_LV ASC, WDT ASC, USER_NM ASC		
					)
				WHERE
					VALID_YN = 'Y' AND
					SUBSTR(USER_AUTH_CD, 1, 1) NOT IN ('D')
					<isEqual property="user_auth_lv" prepend="AND" compareValue="100">
						USER_AUTH_LV <![CDATA[ < ]]> #user_auth_lv#
					</isEqual>
					<isEqual property="user_auth_lv" prepend="AND" compareValue="10000">
						USER_AUTH_LV BETWEEN 101 AND 10000 
					</isEqual>
					<isEqual property="mailing_yn" prepend="AND" compareValue="Y">
						mailing_yn = 'Y'
					</isEqual>
					<isNotEmpty property="searchKeyword" prepend="AND">
						USER_ID LIKE '%' || #searchKeyword# || '%' OR USER_NM LIKE '%' || #searchKeyword# || '%'  
					</isNotEmpty>
			)
			
		) TB ) 
		
		

	</select>
	
	

</sqlMap>

